/*
 * part of the style based on http://js13kgames.com/entries/lost-in-cyberspace
 */
.preloader {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 9999;
    background-image: url("../images/terminal-blink.gif");
    background-repeat: no-repeat;
    background-color: black;
    background-position: center;
}

html {
    background: black url("../images/myself.png") no-repeat center center;
    background-size: 15% 60%;
}

body {
    margin: 0;
}

#term {
    height: 70vh;
    border: 1px solid white;
    border-top: 0;
}

:root {
    --background: #031e11;
    --size: 1.5;
}

.status-bar {
    background-size: 100%;
    background-image: linear-gradient(to bottom, #3f3f3f 0%, #585858 100%);
    border: 1px solid white;
    border-bottom: 1px solid black;
    -moz-border-radius: 0px;
    -webkit-border-radius: 10px 10px 0px 0px;
    border-radius: 10px 10px 0px 0px;
}

.status-bar .title {
    position: relative;
    text-align: center;
    font-weight: bold;
    color: #fff;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    font-size: 1.33333em;
    line-height: 1.6875em;
}

.status-bar .button-exit {
    float: left;
    padding: 6px;
    position: relative;
    z-index: 1;
}

/* to see yourself like in a mirror */
.self {
    transform: scale(-1, 1);
}

/* flicker animation taken from http://goonhub.com/secret */
.flicker {

    margin: 0 auto;
    height: 100%;
    width: 100%;

    position: absolute;
    top: 0;
    background: rgba(18, 16, 16, 0.2);
    opacity: 0;
    z-index: 1000;
    pointer-events: none;
    animation: flicker 0.12s infinite;
}
@keyframes flicker {
  0% {
    opacity: 0.552;
  }
  5% {
    opacity: 0.48287;
  }
  10% {
    opacity: 0.59134;
  }
  15.0% {
    opacity: 0.79543;
  }
  20% {
    opacity: 0.75134;
  }
  25% {
    opacity: 0.1956;
  }
  30.0% {
    opacity: 0.90687;
  }
  35% {
    opacity: 0.122;
  }
  40% {
    opacity: 0.62254;
  }
  45% {
    opacity: 0.56977;
  }
  50% {
    opacity: 0.9925;
  }
  55.0% {
    opacity: 0.55487;
  }
  60.0% {
    opacity: 0.16607;
  }
  65% {
    opacity: 0.12353;
  }
  70% {
    opacity: 0.2214;
  }
  75% {
    opacity: 0.67908;
  }
  80% {
    opacity: 0.97163;
  }
  85.0% {
    opacity: 0.1275;
  }
  90% {
    opacity: 0.37186;
  }
  95% {
    opacity: 0.24475;
  }
  100% {
    opacity: 0.37221;
  }
}
/* glow */
.terminal {
    text-shadow: 0 0.2rem 1rem #0c7b46;
}
/* based on
https://blog.carbonfive.com/2015/01/07/vintage-terminal-effect-in-css3/
*/
.scanlines {
    margin: 0 auto;
    top: 0;
    height: 100%;
    width: 100%;
    background: linear-gradient(
            to bottom,
            rgba(255, 255, 255, 0),
            rgba(255, 255, 255, 0) 50%,
            rgba(0, 0, 0, .2) 70%,
            rgba(0, 0, 0, .6)
    );
    background-size: 100% .3rem;
    position: absolute;
    pointer-events: none;
}

.scanlines:before {
    position: absolute;
    /*top: 0px;*/
    width: 100%;
    height: 5px;
    background: #fff;
    background: linear-gradient(to bottom,
    rgba(255, 0, 0, 0) 0%,
    rgba(255, 250, 250, 1) 50%,
      rgba(255,255,255,0.98) 51%,
      rgba(255,0,0,0) 100%
  ); /* W3C */
  opacity: .1;
}
.scanlines:after {
  box-shadow: 0 2px 6px rgba(25,25,25,0.2),
      inset 0 1px rgba(50,50,50,0.1),
      inset 0 3px rgba(50,50,50,0.05),
      inset 0 3px 8px rgba(64,64,64,0.05),
      inset 0 -5px 10px rgba(25,25,25,0.1);
}
.tv {
    top: 200px;
    width: 70%;
    height: 50%;
    margin: 0 auto;
    position: relative;
}
.tv.collapse {
    animation: size 3s ease-out;
    animation-fill-mode: forwards;
}
.tv.collapse:before {
    content: '';
    display: block;
    height: 100%;
    /*margin: 0 auto;*/
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    top: 0;
    background: white;
    z-index: 1;
    opacity: 0;
    animation: opacity 3s ease-out;
    animation-fill-mode: forwards;
}

@keyframes opacity {
    to { opacity: 1; }
}

@keyframes size {
    50% {
        transform: scaleX(calc(1 / var(--width)));
        opacity: 1;
    }
    98% {
        transform: scaleX(calc(1 / var(--width))) scaleY(calc(1 / var(--height)));
        opacity: 1;
    }
    100% {
        transform: scaleX(calc(1 / var(--width))) scaleY(calc(1 / var(--height)));
        opacity: 0;
    }
}

@media only screen and (max-width: 768px) {
    html {
        background: black url("../images/myself.png") no-repeat center 120px;
        background-size: 35% 55%;
    }

    .tv {
        top: 50px;
        width: 70%;
        height: 10%;
        margin: 0 auto;
        position: relative;
    }

    :root {
        --background: #031e11;
        --size: 0.5;
    }

    .status-bar .title {
        font-size: 1.0em;
    }

    .status-bar .button-exit {
        padding: 1.5px;
        z-index: 1;
    }

}